{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftSearchApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","class","GiftSearchApp","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAmCC,mBAAS,IAA5C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBC,OACI,sBAAMC,SAXU,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAS,IACnBP,GAAe,SAAAQ,GAAI,OAAKN,GAAL,mBAAmBM,OACtCL,EAAc,MAOjB,SACG,uBACAM,KAAK,OACLC,MAAOR,EACPS,SAnBkB,SAACN,GACvBF,EAAcE,EAAEO,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACfC,EADe,iDACkCC,UAAUH,GAD5C,8DAEHI,MAAMF,GAFH,cAEfG,EAFe,gBAGAA,EAAKC,OAHL,uBAGdC,EAHc,EAGdA,KAIDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EAC1B,MAAM,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXjB,kBAedM,GAfc,4CAAH,sDCAPO,EAAc,SAAC,GAAsB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IAEtC,OACI,sBAAKc,UAAU,OAAf,UACE,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCFKO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEvB,ECAyB,SAACA,GAEzB,MAA0Bb,mBAAS,CAC/BoB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KA8BA,OAhBAC,qBAAW,WACPxB,EAAQC,GACHwB,MAAM,SAAAC,GACHC,YAAW,WAGPJ,EAAS,CACLf,KAAKkB,EACLL,SAAQ,MAEX,UAIb,CAACpB,IAEEqB,EDhCkBM,CAAa3B,GAA/BO,EAAR,EAAQA,KAAMa,EAAd,EAAcA,QAcf,OACE,qCACO,qBAAIQ,MAAM,oCAAV,cAAiD5B,KAE/CoB,GAAW,0CAEb,qBAAKJ,UAAU,WAAf,SAEG,6BAEQT,EAAKE,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAESA,GADAA,EAAIC,eE3BxBkB,EAAgB,WAGzB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAMD,OACC,gCACI,oBAAI0C,MAAM,mCAAV,2BACA,uBAEA,cAAC,EAAD,CAAa1C,cAAeA,IAE9B,6BAEU4C,EAAWrB,KAAK,SAACT,GAAD,OACf,cAAC,EAAD,CAECA,SAAWA,GADNA,YCrBvB+B,IAASC,OACL,cAAC,IAAMC,WAAP,UACA,cAAC,EAAD,MAGAC,SAASC,eAAe,W","file":"static/js/main.acc44540.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue]= useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n\r\n    }\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.length > 2){\r\n            setCategories( cats => [inputValue,...cats ]);\r\n            setInputValue('');\r\n        }\r\n\r\n      //  console.log('Submit Hecho ยก');\r\n\r\n    }\r\n     return(\r\n         <form onSubmit={handleSubmit}>\r\n            <input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange }\r\n            />\r\n         </form>\r\n     );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs=  async(category)=>{\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=7&api_key=P7N9xQBQbHCJY5utE4HJF5gkH75KPGC4`;\r\n  const resp= await fetch(url);\r\n  const {data} = await resp.json();\r\n\r\n\r\n\r\n  const gifs = data.map(img =>{\r\n    return{\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  });\r\n\r\n  return gifs;\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ( {id, title,url} ) => {\r\n    //console.log(id, title, url);\r\n  return(\r\n      <div className=\"card\">\r\n        <img src={ url } alt={ title }/>\r\n        <p> { title } </p>\r\n\r\n      </div>\r\n  ) \r\n};\r\n\r\n\r\n","//import React, { useEffect, useState } from 'react';\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n   const { data, loading}  = useFetchGifs(category);\r\n   //console.log(state);\r\n\r\n/*   const [images, setImages] = useState([]);\r\n  useEffect( () =>{\r\n    getGifs(category)\r\n       .then( imgs => setImages(imgs) ); //.then( setImages );\r\n\r\n  },[category]);\r\n\r\n   */\r\n\r\n  //getGifs();\r\n\r\n  return( \r\n    <>    \r\n           <h3 class=\"animate__animated animate__bounce\"> { category }</h3>\r\n\r\n           { loading && <p>Loading..</p> }\r\n\r\n           <div className='cardGrid'> \r\n             \r\n              <ol>\r\n                  {\r\n                      data.map((img) => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            { ...img }\r\n\r\n                          />\r\n                      ))\r\n              }\r\n              </ol>  \r\n           </div>\r\n     </>   \r\n  )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\n\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n\r\n    });\r\n\r\n  /*   setTimeout(() => {\r\n        setState(\r\n            {\r\n                data:[],\r\n                loading:false\r\n            }\r\n        )\r\n    }, 3000); */\r\n    useEffect( () => {\r\n        getGifs(category)\r\n            .then( imgs => {\r\n                setTimeout(() => {\r\n                    //console.log(imgs);\r\n            \r\n                    setState({\r\n                        data:imgs,\r\n                        loading:false\r\n                    })\r\n                  }, 3000);\r\n               \r\n           }); //.then( setImages );\r\n    \r\n      },[category]);\r\n\r\n    return state; //  {data: [], loading: true}\r\n\r\n};\r\n","\r\nimport { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GiftSearchApp = () => {\r\n   // const categories =['One Piece', 'Naruto', 'Dragon Ball'];\r\n    \r\n    const [categories, setCategories] = useState(['One Piece' ]);\r\n  /*  const handleAdd =( )=> {\r\n        //setCategories ([ 'Attack on Titan', ...categories,]);\r\n        setCategories( cats=> ['Attack on Titan', ...cats]);\r\n    }\r\n */\r\n   return (\r\n    <div>\r\n        <h2 class=\"animate__animated animate__swing\">GiftSearchApp</h2>\r\n        <hr/>\r\n\r\n        <AddCategory setCategories={setCategories} />\r\n\r\n      <ol>\r\n            {\r\n                categories.map( (category) => (\r\n                 <GifGrid\r\n                 key={ category }\r\n                  category={ category }\r\n                  \r\n\r\n                 />\r\n                ))\r\n            }\r\n        </ol>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {GiftSearchApp} from './GiftSearchApp';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n    <GiftSearchApp />\r\n  </React.StrictMode>\r\n    ,\r\n    document.getElementById('root')\r\n\r\n);\r\n"],"sourceRoot":""}